"""Run `kipoi predict` for multiple models
"""

import kipoi

# config - TODO update
intervals_file = 'input/intervals_file'
fasta_file = 'input/fasta_file'

assert os.path.exists(intervals_file)
assert os.path.exists(fasta_file)

# TODO - update
models = ['DeepSEA/predict']  # , 'Basset']

file_formats = ['tsv', 'h5']

rule all:
    input:
        expand('output/{model}.{ext}', model=models, ext=file_formats)

    # NOTE: this example runs each model prediction once for each output file format
    # you could also specify multiple output files simultaneusly:
    # `-o file.tsv file.h5`


rule predict:
    input:
        intervals_file = intervals_file,
        fasta_file = fasta_file
    output:
        predictions = "output/{model}.{ext}",
        workers = 10,  # number of workers,
        batch_size = 32
    shell:
        """
        kipoi_cmd=$(kipoi env get_cli {wildcards.model})

        $kipoi_cmd predict \
          {wildcards.model} \
          --dataloader_args='{{"intervals_file": "{input.intervals_file}",
                              "fasta_file": "{input.fasta_file}"}}' \
          -n {params.workers} \
          --batch_size={params.batch_size} \
          -o {output.predictions}
        """
        # alternatively, use
        # source activate $(kipoi env get {wildcards.model})
        # kipoi predict ...



